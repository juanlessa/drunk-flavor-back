// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Drink {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        String            @unique
  method      String
  cover       String            @default("")
  thumbnail   String            @default("")
  ingredients DrinkIngredient[]
  created_at  DateTime          @default(now())

  @@map("drinks")
}

model DrinkIngredient {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  drink        Drink      @relation(fields: [drinkId], references: [id], onDelete: Cascade)
  drinkId      String     @db.ObjectId
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId String     @db.ObjectId
  quantity     Float

  @@map("drinksIngredients")
}

model Ingredient {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  name          String            @unique
  unitySingular String
  unityPlural   String
  category      Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String            @db.ObjectId
  isAlcoholic   Boolean
  drinks        DrinkIngredient[]
  created_at    DateTime          @default(now())

  @@map("ingredients")
}

model Category {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String       @unique
  ingredients Ingredient[]
  created_at  DateTime     @default(now())

  @@map("categories")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  surname    String
  email      String   @unique
  password   String
  role       String
  created_at DateTime @default(now())

  @@map("users")
}

model UserToken {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id       String
  refresh_token String   @unique
  expires_date  DateTime
  created_at    DateTime @default(now())

  @@map("users_tokens")
}
